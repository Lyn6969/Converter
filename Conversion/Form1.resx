<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB/TBIAgk8eAIBNFgqATRcdgE0XIIBNFyCATRcggE0XIIBNFyCATRcggE0XIIBN
        FyCATRcggE0XIIBNFyCATRcggE0XIIBNFyCATRcVgE0XAoBNFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgE0UAIFOGACATRckgU0XpoFMFd2BTBTfgUwU34FMFN+BTBTfgUwU34FM
        FN+BTBTfgUwU34FMFN+BTBTfgUwU34FMFN+BTBTfgUwU34FNFs6ATRdigE0XBoBNFwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACATRcAgE0WCYFNF6qAUB3/d2NC/XVoTPt1aEz7dWhM+3Vo
        TPt1aEz7dWhM+3VoTPt1aEz7dWhM+3VoTPt1aEz7dWhM+3VoTPt1aEv8fFku/4FOF+2BTRc/gU4XAIBM
        FgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBNFwCATRccgUwV2ndjQv1UtOL8UL71/FC+
        9fxQvfT8UL30/FC99PxQvvX8UL71/FC99PxQvfT8UL30/FC99PxQvvX8UL30/FC+9fxilKP5gFAc/oFN
        F3WCTxkAgE0XAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgE0XAIBNFyCBTBTfdGpQ+FC+
        9fxOwfv/Ubru/1C/9v9Ow///TsP//1C+9f9Ruu7/TsH7/07D//9Ow///T7/3/1G67v9PwPr/TcX//1yh
        vPZ/UR/+gU0WgIVSHACATRcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACATRcAgE0XIIFM
        FN90alD4UL30/GSPmf94YT3/bXlu/1C98/9QvPL/b3dp/3hhPv9gl6n/TcP//0+/9/9sfXb/eWA8/2aL
        kf9Ow///XKC79n9RH/2BTReXgU4YLoFOGC6BThgugU4YLoFOGC6BThgugE4XLIBNFw+BTxkAf0wWAIBN
        FwCATRcggUwU33RqUPhQvfP8ZouS/3lgPP9vd2n/Ubzx/1G78P9vdWb/eGE9/2KUo/9Ow///UL72/218
        cv95YDz/aIeJ/07C/v9coLv2f1Ef/IBMFfV/TBXrgU4Y64FNFeuBTRfrgU4Y639LFeuATRfrgU4YnYBN
        FwuATRcAgE0XAIBNFyCBTBTfdGpQ+FC+9PxPwfr/Ubru/1C+9v9Ow///TsP//1C99P9Ruu7/T8H6/07D
        //9Ow///UL72/1K67v9PwPn/TcT//1ygu/Z/UR78lGg6/5lwRP+CTxn/eWNB/31YLP+EURz/nXZM/4pb
        Kf+ATRfegE0XH4BNFwCATRcAgE0XIIFMFN90alD4UL30/E7D/v9Pv/j/TsH8/07D//9Ow///T8H6/0+/
        +P9Owv3/TsP//07D//9Owfv/T7/3/07C/f9NxP//XKC79n5QHfy/pYr/0r+s/4RSHf9nlKD/dHFc/4ta
        Jv/g08b/oHpR/39LFN+ATRcggE0XAIBNFwCATRcggUwU33RqUPhQvfT8YJiq/3VqT/9pg4H/UL72/1C+
        9f9rgHr/dGpP/16etv9Nw///T8D5/2iGiP91aU3/YpSi/03D//9coLv2flAd/MGnjf/UwrD/hFIe/2aW
        o/90cl7/jFon/+LXy/+he1P/f0sU34BNFyCATRcAgE0XAIBNFyCBTBTfdGpQ+FC98/xohof/fFkt/3Jw
        W/9Ru+//Ubru/3JvWf98WS7/ZI+Y/07D//9QvvX/b3Vm/3xYLP9qgX3/TsL9/1ygu/Z+UB38waeM/9TC
        r/+EUh3/Zpaj/3RyXv+MWif/4tfL/6F7U/9/SxTfgE0XIIBNFwCATRcAgE0XIIFMFN90alD4UL71/FC/
        9/9Ttub/Ubvw/07D/v9Ow/7/Ubru/1O25v9Pv/j/TsP//07D//9RvPH/U7bm/1C+9f9NxP//XKC79n5Q
        HfzBp4z/1MKv/4RSHf9mlqP/dHJe/4xaJ//i18v/oXtT/39LFN+ATRcggE0XAIBNFwCATRcggUwU33Rq
        UPhQvvX8T7/3/1O15P9Ru/D/TsP//07D/v9Ruu7/U7Xk/0+/+P9Ow///TsP//1G78P9UteT/UL71/03E
        //9coLv2flAd/MGnjP/Uwq//hFId/2aWo/90cl7/jFon/+LXy/+he1P/f0sU34BNFyCATRcAgE0XAIBN
        FyCBTBTfdGpQ+FC98/xniIr/e1kv/3FxXv9RvPD/Ubvw/3JwW/97WjD/Y5Gd/07D//9Qvvb/b3do/3xZ
        Lv9phIP/TsL+/1ygu/Z+UB38waeM/9TCr/+EUh3/Zpaj/3RyXv+MWif/4tfL/6F7U/9/SxTfgE0XIIBN
        FwCATRcAgE0XIIFMFN90alD4UL30/GOSn/91aU3/a354/1C98/9QvfP/bHx0/3VpTv9fmq//TcP//0+/
        9/9qgoD/dWhM/2SPmP9Ow///XKC79n5QHfzBp4z/1MKv/4RSHf9mlqP/dHJe/4xaJ//i18v/oXtT/39L
        FN+ATRcggE0XAIBNFwCATRcggUwU33RqUPhQvfT8TsL9/1C+9f9PwPr/TsP//07D//9PwPn/UL71/07C
        /f9Ow///TsP//0/A+v9QvvX/TsL8/03E//9coLv2flAd/MGnjP/Uwq//hFId/2aWo/90cl7/jFon/+LX
        y/+he1P/f0sU34BNFyCATRcAgE0XAIBNFyCBTBTfdGpQ+FC99PxNxP//TcX//03F//9Nxf//TcX//03F
        //9Nxf//TcX//03F//9Nxf//TcX//03F//9Nw///TcT//1ygu/Z+UB38waeM/9TCr/+EUh3/Zpaj/3Ry
        Xv+MWif/4tfL/6F7U/9/SxTfgE0XIIBNFwCATRcAgE0XIIFMFN90alD4UL71/FG78P9bpML/XaC6/12g
        u/9doLv/XaC7/12gu/9doLv/XaC7/12gu/9doLr/XKPA/1K67f9Nxf//XKC79n5QHfzBp4z/1MKv/4RS
        Hf9mlqP/dHJe/4xaJ//i18v/oXtT/39LFN+ATRcggE0XAIBNFwCATRcggUwU33RqUPhQvfP8aYWF/39R
        Hv9/UBz/f1Ad/39QHf9/UB3/f1Ad/39QHf9/UB3/f1Ad/39QHf9/UR3/aoF+/07D/v9coLv2flAd/MGn
        jP/Uwq//hFId/2aWo/90cl7/jFon/+LXy/+he1P/f0sU34BNFyCATRcAgE0XAIBNFyCBTBTfdGpQ+FG7
        7/xxcFv/hlAW/6t5Mv+1gzn/tYI4/7WCOP+1gjj/tYI4/7WCOP+1gzj/rnw0/4hSGP90aU//T8D5/1yh
        vPZ+UB38waeM/9TCr/+EUh3/Zpaj/3RyXv+MWif/4tfL/6F7U/9/SxTfgE0XIIBNFwCATRcAgE0XIIFM
        FN90alD4Ubvv/HFwXP+KVBn/16ZP/+y7XP/rulv/67pb/+u6W//rulv/67pb/+u7XP/erVP/jlkc/3Rp
        T/9PwPn/XKG89n5QHfzBqI3/1MOw/4RSHv9mlqP/dHNe/4xaJ//j18v/oXtT/39LFN+ATRcggE0XAIBN
        FwCATRcggUwU33RqUPhRu+/8cXBc/4pUGf/Xpk//7Ltc/+u6W//rulv/67pb/+u6W//rulv/67pc/96t
        U/+OWRz/dGlP/0/A+f9cobz2flAe/LWXd//FrZT/g1Ec/2uJiv92bFH/ilgk/9G+qv+bc0j/f0sV34BN
        FyCATRcAgE0XAIBNFyCBTBTfdGpQ+FG77/xxcFv/iVMZ/8ybSP/erVP/3axT/92sU//drFP/3axT/92s
        U//erVP/0qFM/4xXG/90aU//T8D5/1yhvPZ/UR/8hlQg/4dXI/+BThj/f1Mj/4BRHf+CTxn/iFgm/4NR
        HP+BThfVgE0XGoBNFwCATRcAgE0XIIFMFN90alD4Ubvw/HB1ZP+DSxL/jFYb/45ZHP+OWRz/jlkc/45Z
        HP+OWRz/jlkc/45ZHP+MVxv/hEwS/3JvWf9Pwfr/XKG89n9RH/yATRbZgE0Xs4FOGLOBTRezgU0Xs4FN
        F7OATRa0gE0XsIBOF1qAThcDgE4XAIBNFwCATRcggUwU33RqUPhQvvX8W6TB/3JuWP90aU//dGlP/3Rp
        T/90aU//dGlP/3RpT/90aU//dGlP/3RpT/9zbVX/XKG7/03E//9coLv2f1Ef/oFNFoOATBYGgU0XBoFN
        FwaBTRcGgU0XBoFNFwaATRcFf0wVAX9MFgAAAAAAgE0XAIBNFyCBTBTfdGpQ+FC+9fxNxP//T8D4/1C/
        9/9Qv/f/UL/3/1C/9/9Qv/f/UL/3/1C/9/9Qv/f/UL/3/0+/+P9Ow/7/TcX//1yhvPZ/UR/+gU0WgYdT
        HQCATRcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACATRcAgE0XHYFMFdt3ZET8VLTj/FC+
        9fxQvvX8UL71/FC+9fxQvvX8UL71/FC+9fxQvvX8UL71/FC+9fxQvvX8UL71/FC99PxQvvb8YZWl+IBQ
        Hf6BTRd3gk8ZAIBNFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBNFwCATRcKgU0XroBQ
        Hf93ZET8dGpQ+HRqUPh0alD4dGpQ+HRqUPh0alD4dGpQ+HRqUPh0alD4dGpQ+HRqUPh0alD4dGpQ+HRp
        Tvl8WS7/gU4X74FOF0OBThcAgEwWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf00VAIFO
        GACATRcqgU0Xr4FMFdyCTBTfgkwU34JMFN+CTBTfgkwU34JMFN+CTBTfgkwU34JMFN+CTBTfgkwU34JM
        FN+CTBTfgUwU34FNFtGAThdvgE4WB4BOFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAf0wUAIRQJACATRcKgU0XHYFNFyCBTRcggU0XIIFNFyCBTRcggU0XIIFNFyCBTRcggU0XIIFN
        FyCBTRcggU0XIIFNFyCBTRcfgE0XFYBOFwOAThcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////+AAB//AAAP/gAAD/4AAA/+AAAP/gAAAA4AAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAOAAAP/gAAD/4AAA//AAAP/4AAH//////8=
</value>
  </data>
</root>